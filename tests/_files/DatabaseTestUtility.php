<?php
/*
 * This file is part of DbUnit.
 *
 * (c) Sebastian Bergmann <sebastian@phpunit.de>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

class DBUnitTestUtility
{
    protected static $connection;
    protected static $Db2Connection;

    public static function getSQLiteMemoryDB()
    {
        if (self::$connection === null) {
            self::$connection = new PDO('sqlite::memory:');
            self::setUpDatabase(self::$connection);
        }

        return self::$connection;
    }

    protected static function setUpDatabase(PDO $connection): void
    {
        $connection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

        $connection->exec(
          'CREATE TABLE IF NOT EXISTS table1 (
            table1_id INTEGER PRIMARY KEY AUTOINCREMENT,
            column1 VARCHAR(20),
            column2 INT(10),
            column3 DECIMAL(6,2),
            column4 TEXT
          )'
        );

        $connection->exec(
          'CREATE TABLE IF NOT EXISTS table2 (
            table2_id INTEGER PRIMARY KEY AUTOINCREMENT,
            column5 VARCHAR(20),
            column6 INT(10),
            column7 DECIMAL(6,2),
            column8 TEXT
          )'
        );

        $connection->exec(
          'CREATE TABLE IF NOT EXISTS table3 (
            table3_id INTEGER PRIMARY KEY AUTOINCREMENT,
            column9 VARCHAR(20),
            column10 INT(10),
            column11 DECIMAL(6,2),
            column12 TEXT
          )'
        );
    }
    
    /**
     * Creates connection to test Db2 database
     *
     * MySQL server must be installed locally, with root access
     * and empty password and listening on unix socket
     *
     * @return PDO
     *
     * @see    DBUnitTestUtility::setUpDb2Database()
     */
    public static function getDb2DB()
    {
        if (self::$Db2Connection === null) {
            self::$Db2Connection = new PDO(PHPUNIT_TESTSUITE_EXTENSION_DATABASE_DB2_DSN, PHPUNIT_TESTSUITE_EXTENSION_DATABASE_DB2_USERNAME, PHPUNIT_TESTSUITE_EXTENSION_DATABASE_DB2_PASSWORD);
            self::setUpDb2Database(self::$Db2Connection);
        }

        return self::$Db2Connection;
    }


    /**
     * Creates default testing schema for Db2 database
     *
     * Tables must containt foreign keys
     * for constraint tests to be executed properly
     *
     * @param PDO $connection PDO instance representing connection to DB2 database
     *
     * @see   DBUnitTestUtility::getDb2DB()
     */
    protected static function setUpDb2Database(PDO $connection): void
    {
        $connection->exec(
            "CREATE TABLE phpunit.table1 (
            table1_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
		    START WITH +1  
		    INCREMENT BY +1  
		    MINVALUE +1  
		    MAXVALUE +2147483647  
		    NO CYCLE  
		    CACHE 20  
		    NO ORDER ) ,
            column1 VARCHAR(255 OCTETS),
            column2 INTEGER NOT NULL WITH DEFAULT 0,
            column3 TIMESTAMP NOT NULL WITH DEFAULT '0001-01-01-00.00.00.000000',
            column4 CLOB(65535 OCTETS) LOGGED NOT COMPACT
          );"
        );

        $connection->exec('ALTER TABLE phpunit.table1 ADD CONSTRAINT PK_TABLE1 PRIMARY KEY ("table1_id")');

        $connection->exec(
            "CREATE TABLE phpunit.table2 (
            table2_id INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
		    START WITH +1  
		    INCREMENT BY +1  
		    MINVALUE +1  
		    MAXVALUE +2147483647  
		    NO CYCLE  
		    CACHE 20  
		    NO ORDER ) ,
            table1_id INTEGER,
            column5 VARCHAR(255 OCTETS),
            column6 INTEGER NOT NULL WITH DEFAULT 0,
            column7 DATE,
            column8 CLOB(65535 OCTETS) LOGGED NOT COMPACT
          );"
        );

        $connection->exec('ALTER TABLE phpunit.table2 ADD CONSTRAINT PK_TABLE2 PRIMARY KEY ("table2_id")');
        $connection->exec(
            'ALTER TABLE "PHPUNIT"."TABLE2" ADD CONSTRAINT "TABLE2_FK" FOREIGN KEY ("TABLE1_ID")
                REFERENCES "PHPUNIT"."TABLE1" ("TABLE1_ID")
            ON DELETE RESTRICT
            ON UPDATE NO ACTION
            ENFORCED
            ENABLE QUERY OPTIMIZATION'
        );
    }
}
